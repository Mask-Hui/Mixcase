Deep reinforcement learning has yielded proficient controllers for complex tasks. However, these controllers have limited memory and rely on being able to perceive the complete game screen at each decision point. To address these shortcomings, this article investigates the effects of adding recurrency to a deep q-network (dqn) by replacing the first post-convolutional fully-connected layer with a recurrent lstm. The resulting \textit{deep recurrent q-network} (drqn), although capable of seeing only a single frame at each timestep, successfully integrates information through time and replicates dqn's performance on standard atari games and partially observed equivalents featuring flickering game screens. Additionally, when trained with partial observations and evaluated with incrementally more complete observations, drqn's performance scales as a function of observability. Conversely, when trained with full observations and evaluated with partial observations, drqn's performance degrades less than dqn's. Thus, given the same length of history, recurrency is a viable alternative to stacking a history of frames in the dqn's input layer and while recurrency confers no systematic advantage when learning to play the game, the recurrent net can better adapt at evaluation time if the quality of observations changes.